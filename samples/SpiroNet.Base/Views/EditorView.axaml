<UserControl x:Class="SpiroNet.Views.EditorView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:SpiroNet.Editor.Avalonia.Converters"
             xmlns:renderer="clr-namespace:SpiroNet.Editor.Avalonia.Renderer"
             xmlns:spiro="clr-namespace:SpiroNet;assembly=SpiroNet"
             xmlns:editor="clr-namespace:SpiroNet.Editor"
             UseLayoutRounding="True">
    <UserControl.KeyBindings>
        <KeyBinding Command="{Binding NewCommand}" Gesture="Ctrl+N"/>
        <KeyBinding Command="{Binding OpenCommand}" Gesture="Ctrl+O"/>
        <KeyBinding Command="{Binding SaveAsCommand}" Gesture="Ctrl+S"/>
        <KeyBinding Command="{Binding ExportCommand}" Gesture="Ctrl+E"/>
        <KeyBinding Command="{Binding ExitCommand}" Gesture="Alt+F4"/>
    </UserControl.KeyBindings>
    <UserControl.Resources>
        <converters:ShapeToDataConverter x:Key="ShapeToDataConverter"/>
    </UserControl.Resources>
    <UserControl.Styles>
        <Style Selector="TextBlock">
            <Setter Property="FontFamily" Value="/Assets/Fonts/CascadiaCode.ttf"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        </Style>
        <Style Selector="TextBox">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="FontFamily" Value="/Assets/Fonts/CascadiaCode.ttf"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        </Style>
        <Style Selector="Expander">
            <Setter Property="FontFamily" Value="/Assets/Fonts/CascadiaCode.ttf"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        </Style>
        <Style Selector="ToggleButton:checked /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
        </Style>
        <Style Selector="ToggleButton:pressed /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
        </Style>
        <Style Selector="CheckBox">
            <Setter Property="FontFamily" Value="/Assets/Fonts/CascadiaCode.ttf"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        </Style>
        <Style Selector="RadioButton">
            <Setter Property="FontFamily" Value="/Assets/Fonts/CascadiaCode.ttf"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        </Style>
        <Style Selector="TabStripItem">
            <Setter Property="Margin" Value="0 0 0 -1"/>
            <Setter Property="Padding" Value="4 0 4 0"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        </Style>
    </UserControl.Styles>
    <Grid RowDefinitions="Auto,*" ColumnDefinitions="250,*,250">
        <Menu Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Background="#00FFFFFF">
            <MenuItem Header="_File">
                <MenuItem Command="{Binding NewCommand}" Header="_New"/>
                <Separator/>
                <MenuItem Command="{Binding OpenCommand}" Header="_Open..."/>
                <Separator/>
                <MenuItem Command="{Binding SaveAsCommand}" Header="_Save As..."/>
                <Separator/>
                <MenuItem Command="{Binding ExportCommand}" Header="_Export..."/>
                <Separator/>
                <MenuItem Command="{Binding ExitCommand}" Header="E_xit"/>
            </MenuItem>
        </Menu>
        <TabControl Grid.Column="0" Grid.Row="1" Margin="4,4,4,4">
            <TabItem Header="Shapes">
                <Grid RowDefinitions="*,Auto">
                    <ListBox Name="shapesListBox"
                             Items="{Binding Editor.Drawing.Shapes}"
                             VerticalAlignment="Stretch"
                             Margin="4,4,4,4"
                             Grid.Row="0">
                        <ListBox.DataTemplates>
                            <DataTemplate>
                                <TextBlock Text="Shape"/>
                            </DataTemplate>
                        </ListBox.DataTemplates>
                    </ListBox>
                    <TextBox Name="dataTextBox"
                             AcceptsReturn="True"
                             AcceptsTab="True"
                             IsReadOnly="True"
                             Height="240"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             ScrollViewer.HorizontalScrollBarVisibility="Auto"
                             Margin="4,4,4,4"
                             Grid.Row="1">
                        <TextBox.Text>
                            <MultiBinding Converter="{StaticResource ShapeToDataConverter}" FallbackValue="">
                                <Binding ElementName="shapesListBox" Path="SelectedItem" FallbackValue=""/>
                                <Binding Path="Editor.Data" FallbackValue=""/>
                            </MultiBinding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </TabItem>
            <TabItem Header="Guides">
                <Grid RowDefinitions="*">
                    <ListBox Name="guidesListBox"
                             Items="{Binding Editor.Drawing.Guides}"
                             VerticalAlignment="Stretch"
                             Margin="4,4,4,4">
                        <ListBox.DataTemplates>
                            <DataTemplate>
                                <TextBlock Text="Guide"/>
                            </DataTemplate>
                        </ListBox.DataTemplates>
                    </ListBox>
                </Grid>
            </TabItem>
            <TabItem Header="Measure">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <StackPanel Margin="4">
                        <TextBlock Text="Point0:" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBox Text="{Binding Editor.Measure.Point0, Mode=OneWay}"
                                 TextAlignment="Center"
                                 IsReadOnly="True"
                                 BorderBrush="#00FFFFFF"
                                 BorderThickness="0"
                                 Margin="4,0,4,0">
                        </TextBox>
                        <TextBlock Text="Point1:" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBox Text="{Binding Editor.Measure.Point1, Mode=OneWay}"
                                 TextAlignment="Center"
                                 IsReadOnly="True"
                                 BorderBrush="#00FFFFFF"
                                 BorderThickness="0"
                                 Margin="4,0,4,0">
                        </TextBox>
                        <TextBlock Text="Distance:" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBox Text="{Binding Editor.Measure.Distance, Mode=OneWay}"
                                 TextAlignment="Center"
                                 IsReadOnly="True"
                                 BorderBrush="#00FFFFFF"
                                 BorderThickness="0"
                                 Margin="4,0,4,0">
                        </TextBox>
                        <TextBlock Text="Angle:" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBox Text="{Binding Editor.Measure.Angle, Mode=OneWay}"
                                 TextAlignment="Center"
                                 IsReadOnly="True"
                                 BorderBrush="#00FFFFFF"
                                 BorderThickness="0"
                                 Margin="4,0,4,0">
                        </TextBox>
                        <TextBlock Text="SnapResult:" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBox Text="{Binding Editor.Measure.SnapResult, Mode=OneWay}"
                                 TextAlignment="Center"
                                 IsReadOnly="True"
                                 BorderBrush="#00FFFFFF"
                                 BorderThickness="0"
                                 Margin="4,0,4,0">
                        </TextBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
        <ScrollViewer VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto"
                      Grid.Column="1"
                      Grid.Row="1"
                      Margin="0,4,0,4"
                      Focusable="False">
            <renderer:CanvasRenderer Name="canvas"
                                    SpiroEditor="{Binding Editor}"
                                    Width="{Binding Editor.Drawing.Width}"
                                    Height="{Binding Editor.Drawing.Height}"
                                    Background="DarkGray"
                                    Focusable="True">
                <renderer:CanvasRenderer.KeyBindings>
                    <KeyBinding Command="{Binding DeleteCommand}" Gesture="Delete"/>
                    <KeyBinding Command="{Binding IsStrokedCommand}" Gesture="K"/>
                    <KeyBinding Command="{Binding IsFilledCommand}" Gesture="F"/>
                    <KeyBinding Command="{Binding IsClosedCommand}" Gesture="D"/>
                    <KeyBinding Command="{Binding IsTaggedCommand}" Gesture="T"/>
                    <KeyBinding Command="{Binding ToolCommand}" CommandParameter="None" Gesture="N"/>
                    <KeyBinding Command="{Binding ToolCommand}" CommandParameter="Guide" Gesture="G"/>
                    <KeyBinding Command="{Binding ToolCommand}" CommandParameter="Spiro" Gesture="S"/>
                    <KeyBinding Command="{Binding PointTypeCommand}" CommandParameter="Corner" Gesture="V"/>
                    <KeyBinding Command="{Binding PointTypeCommand}" CommandParameter="G4" Gesture="O"/>
                    <KeyBinding Command="{Binding PointTypeCommand}" CommandParameter="G2" Gesture="C"/>
                    <KeyBinding Command="{Binding PointTypeCommand}" CommandParameter="Left" Gesture="OemOpenBrackets"/>
                    <KeyBinding Command="{Binding PointTypeCommand}" CommandParameter="Right" Gesture="OemCloseBrackets"/>
                    <KeyBinding Command="{Binding PointTypeCommand}" CommandParameter="End" Gesture="Z"/>
                    <KeyBinding Command="{Binding PointTypeCommand}" CommandParameter="OpenContour" Gesture="Shift+OemOpenBrackets"/>
                    <KeyBinding Command="{Binding PointTypeCommand}" CommandParameter="EndOpenContour" Gesture="Shift+OemCloseBrackets"/>
                </renderer:CanvasRenderer.KeyBindings>
                </renderer:CanvasRenderer>
            </ScrollViewer>
        <TabControl Grid.Column="2" Grid.Row="1" Margin="4,4,4,4">
            <TabItem Header="State">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <StackPanel>
                        <Expander Header="Tool" IsExpanded="True" Margin="4,2,4,2">
                            <StackPanel>
                                <RadioButton IsChecked="{Binding Path=Editor.State.Tool, Mode=OneWay, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static editor:EditorTool.None}}"
                                             Command="{Binding ToolCommand}"
                                             CommandParameter="None"
                                             VerticalContentAlignment="Center"
                                             Content="None            n"
                                             Margin="1">
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=Editor.State.Tool, Mode=OneWay, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static editor:EditorTool.Guide}}"
                                             Command="{Binding ToolCommand}"
                                             CommandParameter="Guide"
                                             VerticalContentAlignment="Center"
                                             Content="Guide           g"
                                             Margin="1">
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=Editor.State.Tool, Mode=OneWay, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static editor:EditorTool.Spiro}}"
                                             Command="{Binding ToolCommand}"
                                             CommandParameter="Spiro"
                                             VerticalContentAlignment="Center"
                                             Content="Spiro           s"
                                             Margin="1">
                                </RadioButton>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Drawing Size" IsExpanded="True" Margin="4,2,4,2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50*"/>
                                    <ColumnDefinition Width="50*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding Editor.Drawing.Width}"
                                         TextAlignment="Center"
                                         Margin="2"
                                         Grid.Column="0">
                                </TextBox>
                                <TextBox Text="{Binding Editor.Drawing.Height}"
                                         TextAlignment="Center"
                                         Margin="2"
                                         Grid.Column="1">
                                </TextBox>
                            </Grid>
                        </Expander>
                        <Expander Header="New/Selected Point" IsExpanded="True" Margin="4,2,4,2">
                            <StackPanel>
                                <RadioButton IsChecked="{Binding Path=Editor.State.PointType, Mode=OneWay, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static spiro:SpiroPointType.Corner}}"
                                             Command="{Binding PointTypeCommand}"
                                             CommandParameter="Corner"
                                             VerticalContentAlignment="Center"
                                             Content="Corner          v"
                                             Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="A corner point" FontWeight="Bold"/>
                                            <TextBlock Text="Where the slopes and curvatures of the incoming and outgoing splines are unconstrained."/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=Editor.State.PointType, Mode=OneWay, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static spiro:SpiroPointType.G4}}"
                                             Command="{Binding PointTypeCommand}"
                                             CommandParameter="G4"
                                             VerticalContentAlignment="Center"
                                             Content="G4              o"
                                             Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="A G4 curve point" FontWeight="Bold"/>
                                            <TextBlock Text="Continuous up to the fourth derivative."/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=Editor.State.PointType, Mode=OneWay, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static spiro:SpiroPointType.G2}}"
                                             Command="{Binding PointTypeCommand}"
                                             CommandParameter="G2"
                                             VerticalContentAlignment="Center"
                                             Content="G2              c"
                                             Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="A G2 curve point" FontWeight="Bold"/>
                                            <TextBlock Text="Continuous up to the second derivative."/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=Editor.State.PointType, Mode=OneWay, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static spiro:SpiroPointType.Left}}"
                                             Command="{Binding PointTypeCommand}"
                                             CommandParameter="Left"
                                             VerticalContentAlignment="Center"
                                             Content="Left            ["
                                             Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="A left constraint point" FontWeight="Bold"/>
                                            <TextBlock Text="Used to connect a curved line to a straight one."/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=Editor.State.PointType, Mode=OneWay, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static spiro:SpiroPointType.Right}}"
                                             Command="{Binding PointTypeCommand}"
                                             CommandParameter="Right"
                                             VerticalContentAlignment="Center"
                                             Content="Right           ]"
                                             Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="A right constraint point" FontWeight="Bold"/>
                                            <TextBlock Text="Used to connect a straight line to a curved one."/>
                                            <TextBlock Text="If you have a contour which is drawn clockwise, and you have a straight segment at the top, then the left point of that straight segment should be a left constraint, and the right point should be a right constraint."/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=Editor.State.PointType, Mode=OneWay, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static spiro:SpiroPointType.End}}"
                                             Command="{Binding PointTypeCommand}"
                                             CommandParameter="End"
                                             VerticalContentAlignment="Center"
                                             Content="End             z"
                                             Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="End point" FontWeight="Bold"/>
                                            <TextBlock Text="For a closed contour add an extra cp with a ty set to 'end'."/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=Editor.State.PointType, Mode=OneWay, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static spiro:SpiroPointType.OpenContour}}"
                                             Command="{Binding PointTypeCommand}"
                                             CommandParameter="OpenContour"
                                             VerticalContentAlignment="Center"
                                             Content="OpenContour     {"
                                             Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="Open contour" FontWeight="Bold"/>
                                            <TextBlock Text="For an open contour the first cp must have a ty set to 'open contour'."/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </RadioButton>
                                <RadioButton IsChecked="{Binding Path=Editor.State.PointType, Mode=OneWay, Converter={x:Static converters:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static spiro:SpiroPointType.EndOpenContour}}"
                                             Command="{Binding PointTypeCommand}"
                                             CommandParameter="EndOpenContour"
                                             VerticalContentAlignment="Center"
                                             Content="EndOpenContour  }"
                                             Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="End open contour" FontWeight="Bold"/>
                                            <TextBlock Text="For an open contour the last cp must have a ty set to 'end open contour'."/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </RadioButton>
                            </StackPanel>
                        </Expander>
                        <Expander Header="New/Selected Shape" IsExpanded="True" Margin="4,2,4,2">
                            <StackPanel>
                                <CheckBox IsChecked="{Binding Editor.State.IsStroked, Mode=OneWay}"
                                          Command="{Binding IsStrokedCommand}"
                                          VerticalContentAlignment="Center"
                                          Content="Is Stroked      k"
                                          Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="Is stroked path shape" FontWeight="Bold"/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding Editor.State.IsFilled, Mode=OneWay}"
                                          Command="{Binding IsFilledCommand}"
                                          VerticalContentAlignment="Center"
                                          Content="Is Filled       f"
                                          Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="Is filled path shape" FontWeight="Bold"/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding Editor.State.IsClosed, Mode=OneWay}"
                                          Command="{Binding IsClosedCommand}"
                                          VerticalContentAlignment="Center"
                                          Content="Is Closed       d"
                                          Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="Is closed spiro shape" FontWeight="Bold"/>
                                            <TextBlock Text="Whether points describe a closed (True) or open (False) contour."/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding Editor.State.IsTagged, Mode=OneWay}"
                                          Command="{Binding IsTaggedCommand}"
                                          VerticalContentAlignment="Center"
                                          Content="Is Tagged       t"
                                          Margin="1">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Text="Is tagged spiro shape" FontWeight="Bold"/>
                                            <TextBlock Text="This requires that spiro control points be tagged according to convention. A closed curve will have an extra control point attached to the end of it with a type of 'End'."/>
                                            <TextBlock Text="The location of this last point is irrelevant."/>
                                            <TextBlock Text="In an open contour the point types of the first and last control points are going to be ignored."/>
                                        </StackPanel>
                                    </ToolTip.Tip>
                                </CheckBox>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Snap Mode" IsExpanded="True" Margin="4,2,4,2">
                            <StackPanel>
                                <CheckBox Name="snapModePoint"
                                          Content="Point"
                                          VerticalContentAlignment="Center"
                                          Margin="1"/>
                                <CheckBox Name="snapModeMiddle"
                                          Content="Middle"
                                          VerticalContentAlignment="Center"
                                          Margin="1"/>
                                <CheckBox Name="snapModeNearest"
                                          Content="Nearest"
                                          VerticalContentAlignment="Center"
                                          Margin="1"/>
                                <CheckBox Name="snapModeIntersection"
                                          Content="Intersection"
                                          VerticalContentAlignment="Center"
                                          Margin="1"/>
                                <CheckBox Name="snapModeHorizontal"
                                          Content="Horizontal"
                                          VerticalContentAlignment="Center"
                                          Margin="1"/>
                                <CheckBox Name="snapModeVertical"
                                          Content="Vertical"
                                          VerticalContentAlignment="Center"
                                          Margin="1"/>
                                <Grid ColumnDefinitions="50*,50*">
                                    <TextBox Text="{Binding Editor.State.SnapX}"
                                             TextAlignment="Center"
                                             Margin="2"
                                             Grid.Column="0">
                                    </TextBox>
                                    <TextBox Text="{Binding Editor.State.SnapY}"
                                             TextAlignment="Center"
                                             Margin="2"
                                             Grid.Column="2">
                                    </TextBox>
                                </Grid>
                                <CheckBox IsChecked="{Binding Editor.State.EnableSnap}"
                                          Command="{Binding InvalidateCommand}"
                                          VerticalContentAlignment="Center"
                                          Content="Enable Snap"
                                          Margin="1">
                                </CheckBox>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Options" IsExpanded="True" Margin="4,2,4,2">
                            <StackPanel>
                                <CheckBox IsChecked="{Binding Editor.State.DisplayKnots}"
                                          Command="{Binding InvalidateCommand}"
                                          VerticalContentAlignment="Center"
                                          Content="Display Knots"
                                          Margin="1">
                                </CheckBox>
                                <CheckBox IsChecked="{Binding Editor.State.DisplayGuides}"
                                          Command="{Binding InvalidateCommand}"
                                          VerticalContentAlignment="Center"
                                          Content="Display Guides"
                                          Margin="1">
                                </CheckBox>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Selected">
                <Grid RowDefinitions="Auto,50*,Auto,50*">
                    <TextBlock Text="Shapes:" TextAlignment="Left" Margin="4,4,4,0" Grid.Row="0"/>
                    <ListBox Name="selectedShapesListBox"
                             Items="{Binding Editor.State.HitListShapes}"
                             VerticalAlignment="Stretch"
                             Margin="4,4,4,4"
                             Grid.Row="1">
                        <ListBox.DataTemplates>
                            <DataTemplate>
                                <TextBlock Text="Shape"/>
                            </DataTemplate>
                        </ListBox.DataTemplates>
                    </ListBox>
                    <TextBlock Text="Points:" TextAlignment="Left" Margin="4,4,4,0" Grid.Row="2"/>
                    <ListBox Name="selectedPointsListBox"
                             Items="{Binding Editor.State.HitListPoints}"
                             VerticalAlignment="Stretch"
                             Margin="4,4,4,4"
                             Grid.Row="3">
                        <ListBox.DataTemplates>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"/>
                            </DataTemplate>
                        </ListBox.DataTemplates>
                    </ListBox>
                </Grid>
            </TabItem>
            <TabItem Header="Script">
                <Grid RowDefinitions="Auto,*,Auto">
                    <TextBlock Text="Script/plate:" TextAlignment="Left" Margin="4,4,4,0" Grid.Row="0"/>
                    <TextBox Name="scriptTextBox"
                             AcceptsReturn="True"
                             AcceptsTab="True"
                             IsReadOnly="False"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             ScrollViewer.HorizontalScrollBarVisibility="Auto"
                             Margin="4,4,4,4"
                             Grid.Row="1">
                    </TextBox>
                    <Button Content="Run" Command="{Binding ExecuteScriptCommand}"
                            CommandParameter="{Binding ElementName=scriptTextBox, Path=Text}"
                            Margin="4,4,4,4"
                            Grid.Row="2">
                    </Button>
                </Grid>
            </TabItem>
            <TabItem Header="Help">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <StackPanel Margin="4">
                        <TextBlock Text="Spiro Tool" FontWeight="Bold" TextAlignment="Center" Margin="4,0,4,0"/>
                        <TextBlock Text="Mouse Left:" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Begin Shape" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Add Point" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Select Shape" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Select Point" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Move Shape" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Move Point" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="Mouse Right" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Finish Shape" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Insert Point" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Reset Measure" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="Mouse Middle:" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Remove Shape" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Remove Point" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="Guide Tool" FontWeight="Bold" TextAlignment="Center" Margin="4,0,4,0"/>
                        <TextBlock Text="Mouse Left:" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Begin Guide" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Finish Guide" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="Mouse Right" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Cancel Guide" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Reset Measure" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="Mouse Middle:" TextAlignment="Left" Margin="4,0,4,0"/>
                        <TextBlock Text="- Remove Guide" TextAlignment="Left" Margin="4,0,4,0"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
